пример бинарной сериализации класса или структуры

Правила:
    1.1 класс или структура которую сериализируем должена быть сериализируемый тоесть с пометкой
        [Serializable]
    1.2 внутри класса или структуры могут быть простые сереализируемые данные, тоесть даже другие структуры/классы 
        помеченные как [Serializable]
    1.3 если хотим добавить новый не сериализируемый обьект например Vector2 то нужно создать его сурогат, например
        Vector2Serialization и в классе Storage в инициализации BinaryFormatter его явно добавить
            var selector = new SurrogateSelector();

            var vectorSurrogate = new Vector2Serialization();// тип данных что нельзя так просто упаковать

            // добавим его
            selector.AddSurrogate(typeof(Vector2), new StreamingContext(StreamingContextStates.All), vectorSurrogate);
            // здесь можно добавить и другие созданные сурогаты

            _formatter.SurrogateSelector = selector;
        Далее можем смело добавлять наш тип данных в сериализируемые классы как обычные типы данных
    
*** почему собственные структуры или классы можно сериализовать, а например Vector3 нет, потому что при создании структуры мы можем поставить [Serializable]
        а у вектора из UnityEngine нет такой пометки, вот и нужно для каждого типа создавать сурогат

*** пример показывает как упаковать структуру в которой есть список стрктур с простми типами полей, простые поля и сурогаты т.е.
     структуры которые обьявлены по стандарту и не имеют пометки [Serializable]